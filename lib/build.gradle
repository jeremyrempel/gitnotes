apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'

// CocoaPods requires the podspec to have a version.
version = "1.0"

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            // MPP libraries don't currently get this resolution automatically
            matchingFallbacks = ['release']
        }
    }

    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

kotlin {
    targets {
        fromPreset(presets.android, 'android')

        def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")      \
                                   ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            compilations.main.outputKinds("FRAMEWORK")
            compilations.test.outputKinds("FRAMEWORK")
        }
    }
    sourceSets {
        commonMain.dependencies {
            implementation kotlin('stdlib-common')
            implementation "io.ktor:ktor-client-core:$ktor_version"
            implementation "io.ktor:ktor-client-json:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
        }
        commonTest.dependencies {
            implementation "io.ktor:ktor-client-mock:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
            implementation "io.mockk:mockk-common:$mockk_version"

            implementation 'org.jetbrains.kotlin:kotlin-test'
            implementation 'org.jetbrains.kotlin:kotlin-test-junit'
        }
        androidMain.dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])

            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
            implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
        }
        androidTest.dependencies {
            implementation "io.ktor:ktor-client-mock-jvm:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
            implementation "io.mockk:mockk:$mockk_version"

            implementation 'com.android.support.test:runner:1.0.2'
        }
        iosMain.dependencies {
            implementation "io.ktor:ktor-client-ios:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutines_version"
        }
        iosTest.dependencies {
            implementation "io.ktor:ktor-client-mock-native:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
        }
    }

    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Some description for a Kotlin/Native module"
        homepage = "Link to a Kotlin/Native module homepage"
    }
}